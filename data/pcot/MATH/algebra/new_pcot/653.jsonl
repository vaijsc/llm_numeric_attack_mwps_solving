"# Define the number of bricks placed per hour by each bricklayer\nbricks_per_hour = 40  ### condition: 'bricks_per_hour': {'type': 'int', '<=': None, '>=': 0, 'science_constant': False, 'direct_from_question': True}\n# Define the total number of bricks laid by both bricklayers\ntotal_bricks = 600  ### condition: 'total_bricks': {'type': 'int', '<=': None, '>=': 0, 'science_constant': False, 'direct_from_question': True}\n# Define the ratio of hours worked by Alan and David\nalan_ratio_hours = 3  ### condition: 'alan_ratio_hours': {'type': 'int', '<=': None, '>=': 1, 'science_constant': False, 'direct_from_question': True}\n# Let x be the number of hours David worked\n# Alan's hours worked will be 3x\n# Total bricks laid is the sum of bricks laid by both \n# Calculate the total hours worked by David and Alan\n# Since Alan worked three times as many hours, if David worked x hours, total hours = x + 3x = 4x\n# Therefore, total bricks = bricks_per_hour * total_hours = total_bricks\n# This leads to the equation: bricks_per_hour * (x + 3x) = total_bricks\n# Further simplifying gives: 30 * 4x = 600 \n# We can solve for x, the number of hours David worked\n# Calculate David's hours worked\ndavid_hours_worked = total_bricks / (bricks_per_hour * (alan_ratio_hours + 1))  ### condition: 'david_hours_worked': {'type': 'float', '<=': None, '>=': 0, 'science_constant': False, 'direct_from_question': False}\n# Calculate the total number of bricks laid by David\ndavid_bricks_laid = bricks_per_hour * david_hours_worked  ### condition: 'david_bricks_laid': {'type': 'float', '<=': None, '>=': 0, 'science_constant': False, 'direct_from_question': False}\n# Print the number of bricks David laid\nprint(f\"David laid: {david_bricks_laid} bricks\")"
"# Define the number of bricks placed per hour by each bricklayer\nbricks_per_hour = 50  ### condition: 'bricks_per_hour': {'type': 'int', '<=': None, '>=': 0, 'science_constant': False, 'direct_from_question': True}\n# Define the total number of bricks laid by both bricklayers\ntotal_bricks = 600  ### condition: 'total_bricks': {'type': 'int', '<=': None, '>=': 0, 'science_constant': False, 'direct_from_question': True}\n# Define the ratio of hours worked by Alan and David\nalan_ratio_hours = 3  ### condition: 'alan_ratio_hours': {'type': 'int', '<=': None, '>=': 1, 'science_constant': False, 'direct_from_question': True}\n# Let x be the number of hours David worked\n# Alan's hours worked will be 3x\n# Total bricks laid is the sum of bricks laid by both \n# Calculate the total hours worked by David and Alan\n# Since Alan worked three times as many hours, if David worked x hours, total hours = x + 3x = 4x\n# Therefore, total bricks = bricks_per_hour * total_hours = total_bricks\n# This leads to the equation: bricks_per_hour * (x + 3x) = total_bricks\n# Further simplifying gives: 30 * 4x = 600 \n# We can solve for x, the number of hours David worked\n# Calculate David's hours worked\ndavid_hours_worked = total_bricks / (bricks_per_hour * (alan_ratio_hours + 1))  ### condition: 'david_hours_worked': {'type': 'float', '<=': None, '>=': 0, 'science_constant': False, 'direct_from_question': False}\n# Calculate the total number of bricks laid by David\ndavid_bricks_laid = bricks_per_hour * david_hours_worked  ### condition: 'david_bricks_laid': {'type': 'float', '<=': None, '>=': 0, 'science_constant': False, 'direct_from_question': False}\n# Print the number of bricks David laid\nprint(f\"David laid: {david_bricks_laid} bricks\")"
"# Define the number of bricks placed per hour by each bricklayer\nbricks_per_hour = 60  ### condition: 'bricks_per_hour': {'type': 'int', '<=': None, '>=': 0, 'science_constant': False, 'direct_from_question': True}\n# Define the total number of bricks laid by both bricklayers\ntotal_bricks = 600  ### condition: 'total_bricks': {'type': 'int', '<=': None, '>=': 0, 'science_constant': False, 'direct_from_question': True}\n# Define the ratio of hours worked by Alan and David\nalan_ratio_hours = 3  ### condition: 'alan_ratio_hours': {'type': 'int', '<=': None, '>=': 1, 'science_constant': False, 'direct_from_question': True}\n# Let x be the number of hours David worked\n# Alan's hours worked will be 3x\n# Total bricks laid is the sum of bricks laid by both \n# Calculate the total hours worked by David and Alan\n# Since Alan worked three times as many hours, if David worked x hours, total hours = x + 3x = 4x\n# Therefore, total bricks = bricks_per_hour * total_hours = total_bricks\n# This leads to the equation: bricks_per_hour * (x + 3x) = total_bricks\n# Further simplifying gives: 30 * 4x = 600 \n# We can solve for x, the number of hours David worked\n# Calculate David's hours worked\ndavid_hours_worked = total_bricks / (bricks_per_hour * (alan_ratio_hours + 1))  ### condition: 'david_hours_worked': {'type': 'float', '<=': None, '>=': 0, 'science_constant': False, 'direct_from_question': False}\n# Calculate the total number of bricks laid by David\ndavid_bricks_laid = bricks_per_hour * david_hours_worked  ### condition: 'david_bricks_laid': {'type': 'float', '<=': None, '>=': 0, 'science_constant': False, 'direct_from_question': False}\n# Print the number of bricks David laid\nprint(f\"David laid: {david_bricks_laid} bricks\")"
"# Define the number of bricks placed per hour by each bricklayer\nbricks_per_hour = 70  ### condition: 'bricks_per_hour': {'type': 'int', '<=': None, '>=': 0, 'science_constant': False, 'direct_from_question': True}\n# Define the total number of bricks laid by both bricklayers\ntotal_bricks = 600  ### condition: 'total_bricks': {'type': 'int', '<=': None, '>=': 0, 'science_constant': False, 'direct_from_question': True}\n# Define the ratio of hours worked by Alan and David\nalan_ratio_hours = 3  ### condition: 'alan_ratio_hours': {'type': 'int', '<=': None, '>=': 1, 'science_constant': False, 'direct_from_question': True}\n# Let x be the number of hours David worked\n# Alan's hours worked will be 3x\n# Total bricks laid is the sum of bricks laid by both \n# Calculate the total hours worked by David and Alan\n# Since Alan worked three times as many hours, if David worked x hours, total hours = x + 3x = 4x\n# Therefore, total bricks = bricks_per_hour * total_hours = total_bricks\n# This leads to the equation: bricks_per_hour * (x + 3x) = total_bricks\n# Further simplifying gives: 30 * 4x = 600 \n# We can solve for x, the number of hours David worked\n# Calculate David's hours worked\ndavid_hours_worked = total_bricks / (bricks_per_hour * (alan_ratio_hours + 1))  ### condition: 'david_hours_worked': {'type': 'float', '<=': None, '>=': 0, 'science_constant': False, 'direct_from_question': False}\n# Calculate the total number of bricks laid by David\ndavid_bricks_laid = bricks_per_hour * david_hours_worked  ### condition: 'david_bricks_laid': {'type': 'float', '<=': None, '>=': 0, 'science_constant': False, 'direct_from_question': False}\n# Print the number of bricks David laid\nprint(f\"David laid: {david_bricks_laid} bricks\")"
"# Define the number of bricks placed per hour by each bricklayer\nbricks_per_hour = 80  ### condition: 'bricks_per_hour': {'type': 'int', '<=': None, '>=': 0, 'science_constant': False, 'direct_from_question': True}\n# Define the total number of bricks laid by both bricklayers\ntotal_bricks = 600  ### condition: 'total_bricks': {'type': 'int', '<=': None, '>=': 0, 'science_constant': False, 'direct_from_question': True}\n# Define the ratio of hours worked by Alan and David\nalan_ratio_hours = 3  ### condition: 'alan_ratio_hours': {'type': 'int', '<=': None, '>=': 1, 'science_constant': False, 'direct_from_question': True}\n# Let x be the number of hours David worked\n# Alan's hours worked will be 3x\n# Total bricks laid is the sum of bricks laid by both \n# Calculate the total hours worked by David and Alan\n# Since Alan worked three times as many hours, if David worked x hours, total hours = x + 3x = 4x\n# Therefore, total bricks = bricks_per_hour * total_hours = total_bricks\n# This leads to the equation: bricks_per_hour * (x + 3x) = total_bricks\n# Further simplifying gives: 30 * 4x = 600 \n# We can solve for x, the number of hours David worked\n# Calculate David's hours worked\ndavid_hours_worked = total_bricks / (bricks_per_hour * (alan_ratio_hours + 1))  ### condition: 'david_hours_worked': {'type': 'float', '<=': None, '>=': 0, 'science_constant': False, 'direct_from_question': False}\n# Calculate the total number of bricks laid by David\ndavid_bricks_laid = bricks_per_hour * david_hours_worked  ### condition: 'david_bricks_laid': {'type': 'float', '<=': None, '>=': 0, 'science_constant': False, 'direct_from_question': False}\n# Print the number of bricks David laid\nprint(f\"David laid: {david_bricks_laid} bricks\")"
"# Define the number of bricks placed per hour by each bricklayer\nbricks_per_hour = 90  ### condition: 'bricks_per_hour': {'type': 'int', '<=': None, '>=': 0, 'science_constant': False, 'direct_from_question': True}\n# Define the total number of bricks laid by both bricklayers\ntotal_bricks = 600  ### condition: 'total_bricks': {'type': 'int', '<=': None, '>=': 0, 'science_constant': False, 'direct_from_question': True}\n# Define the ratio of hours worked by Alan and David\nalan_ratio_hours = 3  ### condition: 'alan_ratio_hours': {'type': 'int', '<=': None, '>=': 1, 'science_constant': False, 'direct_from_question': True}\n# Let x be the number of hours David worked\n# Alan's hours worked will be 3x\n# Total bricks laid is the sum of bricks laid by both \n# Calculate the total hours worked by David and Alan\n# Since Alan worked three times as many hours, if David worked x hours, total hours = x + 3x = 4x\n# Therefore, total bricks = bricks_per_hour * total_hours = total_bricks\n# This leads to the equation: bricks_per_hour * (x + 3x) = total_bricks\n# Further simplifying gives: 30 * 4x = 600 \n# We can solve for x, the number of hours David worked\n# Calculate David's hours worked\ndavid_hours_worked = total_bricks / (bricks_per_hour * (alan_ratio_hours + 1))  ### condition: 'david_hours_worked': {'type': 'float', '<=': None, '>=': 0, 'science_constant': False, 'direct_from_question': False}\n# Calculate the total number of bricks laid by David\ndavid_bricks_laid = bricks_per_hour * david_hours_worked  ### condition: 'david_bricks_laid': {'type': 'float', '<=': None, '>=': 0, 'science_constant': False, 'direct_from_question': False}\n# Print the number of bricks David laid\nprint(f\"David laid: {david_bricks_laid} bricks\")"
"# Define the number of bricks placed per hour by each bricklayer\nbricks_per_hour = 30  ### condition: 'bricks_per_hour': {'type': 'int', '<=': None, '>=': 0, 'science_constant': False, 'direct_from_question': True}\n# Define the total number of bricks laid by both bricklayers\ntotal_bricks = 700  ### condition: 'total_bricks': {'type': 'int', '<=': None, '>=': 0, 'science_constant': False, 'direct_from_question': True}\n# Define the ratio of hours worked by Alan and David\nalan_ratio_hours = 3  ### condition: 'alan_ratio_hours': {'type': 'int', '<=': None, '>=': 1, 'science_constant': False, 'direct_from_question': True}\n# Let x be the number of hours David worked\n# Alan's hours worked will be 3x\n# Total bricks laid is the sum of bricks laid by both \n# Calculate the total hours worked by David and Alan\n# Since Alan worked three times as many hours, if David worked x hours, total hours = x + 3x = 4x\n# Therefore, total bricks = bricks_per_hour * total_hours = total_bricks\n# This leads to the equation: bricks_per_hour * (x + 3x) = total_bricks\n# Further simplifying gives: 30 * 4x = 600 \n# We can solve for x, the number of hours David worked\n# Calculate David's hours worked\ndavid_hours_worked = total_bricks / (bricks_per_hour * (alan_ratio_hours + 1))  ### condition: 'david_hours_worked': {'type': 'float', '<=': None, '>=': 0, 'science_constant': False, 'direct_from_question': False}\n# Calculate the total number of bricks laid by David\ndavid_bricks_laid = bricks_per_hour * david_hours_worked  ### condition: 'david_bricks_laid': {'type': 'float', '<=': None, '>=': 0, 'science_constant': False, 'direct_from_question': False}\n# Print the number of bricks David laid\nprint(f\"David laid: {david_bricks_laid} bricks\")"
"# Define the number of bricks placed per hour by each bricklayer\nbricks_per_hour = 30  ### condition: 'bricks_per_hour': {'type': 'int', '<=': None, '>=': 0, 'science_constant': False, 'direct_from_question': True}\n# Define the total number of bricks laid by both bricklayers\ntotal_bricks = 800  ### condition: 'total_bricks': {'type': 'int', '<=': None, '>=': 0, 'science_constant': False, 'direct_from_question': True}\n# Define the ratio of hours worked by Alan and David\nalan_ratio_hours = 3  ### condition: 'alan_ratio_hours': {'type': 'int', '<=': None, '>=': 1, 'science_constant': False, 'direct_from_question': True}\n# Let x be the number of hours David worked\n# Alan's hours worked will be 3x\n# Total bricks laid is the sum of bricks laid by both \n# Calculate the total hours worked by David and Alan\n# Since Alan worked three times as many hours, if David worked x hours, total hours = x + 3x = 4x\n# Therefore, total bricks = bricks_per_hour * total_hours = total_bricks\n# This leads to the equation: bricks_per_hour * (x + 3x) = total_bricks\n# Further simplifying gives: 30 * 4x = 600 \n# We can solve for x, the number of hours David worked\n# Calculate David's hours worked\ndavid_hours_worked = total_bricks / (bricks_per_hour * (alan_ratio_hours + 1))  ### condition: 'david_hours_worked': {'type': 'float', '<=': None, '>=': 0, 'science_constant': False, 'direct_from_question': False}\n# Calculate the total number of bricks laid by David\ndavid_bricks_laid = bricks_per_hour * david_hours_worked  ### condition: 'david_bricks_laid': {'type': 'float', '<=': None, '>=': 0, 'science_constant': False, 'direct_from_question': False}\n# Print the number of bricks David laid\nprint(f\"David laid: {david_bricks_laid} bricks\")"
"# Define the number of bricks placed per hour by each bricklayer\nbricks_per_hour = 30  ### condition: 'bricks_per_hour': {'type': 'int', '<=': None, '>=': 0, 'science_constant': False, 'direct_from_question': True}\n# Define the total number of bricks laid by both bricklayers\ntotal_bricks = 900  ### condition: 'total_bricks': {'type': 'int', '<=': None, '>=': 0, 'science_constant': False, 'direct_from_question': True}\n# Define the ratio of hours worked by Alan and David\nalan_ratio_hours = 3  ### condition: 'alan_ratio_hours': {'type': 'int', '<=': None, '>=': 1, 'science_constant': False, 'direct_from_question': True}\n# Let x be the number of hours David worked\n# Alan's hours worked will be 3x\n# Total bricks laid is the sum of bricks laid by both \n# Calculate the total hours worked by David and Alan\n# Since Alan worked three times as many hours, if David worked x hours, total hours = x + 3x = 4x\n# Therefore, total bricks = bricks_per_hour * total_hours = total_bricks\n# This leads to the equation: bricks_per_hour * (x + 3x) = total_bricks\n# Further simplifying gives: 30 * 4x = 600 \n# We can solve for x, the number of hours David worked\n# Calculate David's hours worked\ndavid_hours_worked = total_bricks / (bricks_per_hour * (alan_ratio_hours + 1))  ### condition: 'david_hours_worked': {'type': 'float', '<=': None, '>=': 0, 'science_constant': False, 'direct_from_question': False}\n# Calculate the total number of bricks laid by David\ndavid_bricks_laid = bricks_per_hour * david_hours_worked  ### condition: 'david_bricks_laid': {'type': 'float', '<=': None, '>=': 0, 'science_constant': False, 'direct_from_question': False}\n# Print the number of bricks David laid\nprint(f\"David laid: {david_bricks_laid} bricks\")"
"# Define the number of bricks placed per hour by each bricklayer\nbricks_per_hour = 30  ### condition: 'bricks_per_hour': {'type': 'int', '<=': None, '>=': 0, 'science_constant': False, 'direct_from_question': True}\n# Define the total number of bricks laid by both bricklayers\ntotal_bricks = 600  ### condition: 'total_bricks': {'type': 'int', '<=': None, '>=': 0, 'science_constant': False, 'direct_from_question': True}\n# Define the ratio of hours worked by Alan and David\nalan_ratio_hours = 4  ### condition: 'alan_ratio_hours': {'type': 'int', '<=': None, '>=': 1, 'science_constant': False, 'direct_from_question': True}\n# Let x be the number of hours David worked\n# Alan's hours worked will be 3x\n# Total bricks laid is the sum of bricks laid by both \n# Calculate the total hours worked by David and Alan\n# Since Alan worked three times as many hours, if David worked x hours, total hours = x + 3x = 4x\n# Therefore, total bricks = bricks_per_hour * total_hours = total_bricks\n# This leads to the equation: bricks_per_hour * (x + 3x) = total_bricks\n# Further simplifying gives: 30 * 4x = 600 \n# We can solve for x, the number of hours David worked\n# Calculate David's hours worked\ndavid_hours_worked = total_bricks / (bricks_per_hour * (alan_ratio_hours + 1))  ### condition: 'david_hours_worked': {'type': 'float', '<=': None, '>=': 0, 'science_constant': False, 'direct_from_question': False}\n# Calculate the total number of bricks laid by David\ndavid_bricks_laid = bricks_per_hour * david_hours_worked  ### condition: 'david_bricks_laid': {'type': 'float', '<=': None, '>=': 0, 'science_constant': False, 'direct_from_question': False}\n# Print the number of bricks David laid\nprint(f\"David laid: {david_bricks_laid} bricks\")"
"# Define the number of bricks placed per hour by each bricklayer\nbricks_per_hour = 30  ### condition: 'bricks_per_hour': {'type': 'int', '<=': None, '>=': 0, 'science_constant': False, 'direct_from_question': True}\n# Define the total number of bricks laid by both bricklayers\ntotal_bricks = 600  ### condition: 'total_bricks': {'type': 'int', '<=': None, '>=': 0, 'science_constant': False, 'direct_from_question': True}\n# Define the ratio of hours worked by Alan and David\nalan_ratio_hours = 5  ### condition: 'alan_ratio_hours': {'type': 'int', '<=': None, '>=': 1, 'science_constant': False, 'direct_from_question': True}\n# Let x be the number of hours David worked\n# Alan's hours worked will be 3x\n# Total bricks laid is the sum of bricks laid by both \n# Calculate the total hours worked by David and Alan\n# Since Alan worked three times as many hours, if David worked x hours, total hours = x + 3x = 4x\n# Therefore, total bricks = bricks_per_hour * total_hours = total_bricks\n# This leads to the equation: bricks_per_hour * (x + 3x) = total_bricks\n# Further simplifying gives: 30 * 4x = 600 \n# We can solve for x, the number of hours David worked\n# Calculate David's hours worked\ndavid_hours_worked = total_bricks / (bricks_per_hour * (alan_ratio_hours + 1))  ### condition: 'david_hours_worked': {'type': 'float', '<=': None, '>=': 0, 'science_constant': False, 'direct_from_question': False}\n# Calculate the total number of bricks laid by David\ndavid_bricks_laid = bricks_per_hour * david_hours_worked  ### condition: 'david_bricks_laid': {'type': 'float', '<=': None, '>=': 0, 'science_constant': False, 'direct_from_question': False}\n# Print the number of bricks David laid\nprint(f\"David laid: {david_bricks_laid} bricks\")"
"# Define the number of bricks placed per hour by each bricklayer\nbricks_per_hour = 30  ### condition: 'bricks_per_hour': {'type': 'int', '<=': None, '>=': 0, 'science_constant': False, 'direct_from_question': True}\n# Define the total number of bricks laid by both bricklayers\ntotal_bricks = 600  ### condition: 'total_bricks': {'type': 'int', '<=': None, '>=': 0, 'science_constant': False, 'direct_from_question': True}\n# Define the ratio of hours worked by Alan and David\nalan_ratio_hours = 7  ### condition: 'alan_ratio_hours': {'type': 'int', '<=': None, '>=': 1, 'science_constant': False, 'direct_from_question': True}\n# Let x be the number of hours David worked\n# Alan's hours worked will be 3x\n# Total bricks laid is the sum of bricks laid by both \n# Calculate the total hours worked by David and Alan\n# Since Alan worked three times as many hours, if David worked x hours, total hours = x + 3x = 4x\n# Therefore, total bricks = bricks_per_hour * total_hours = total_bricks\n# This leads to the equation: bricks_per_hour * (x + 3x) = total_bricks\n# Further simplifying gives: 30 * 4x = 600 \n# We can solve for x, the number of hours David worked\n# Calculate David's hours worked\ndavid_hours_worked = total_bricks / (bricks_per_hour * (alan_ratio_hours + 1))  ### condition: 'david_hours_worked': {'type': 'float', '<=': None, '>=': 0, 'science_constant': False, 'direct_from_question': False}\n# Calculate the total number of bricks laid by David\ndavid_bricks_laid = bricks_per_hour * david_hours_worked  ### condition: 'david_bricks_laid': {'type': 'float', '<=': None, '>=': 0, 'science_constant': False, 'direct_from_question': False}\n# Print the number of bricks David laid\nprint(f\"David laid: {david_bricks_laid} bricks\")"
"# Define the number of bricks placed per hour by each bricklayer\nbricks_per_hour = 30  ### condition: 'bricks_per_hour': {'type': 'int', '<=': None, '>=': 0, 'science_constant': False, 'direct_from_question': True}\n# Define the total number of bricks laid by both bricklayers\ntotal_bricks = 600  ### condition: 'total_bricks': {'type': 'int', '<=': None, '>=': 0, 'science_constant': False, 'direct_from_question': True}\n# Define the ratio of hours worked by Alan and David\nalan_ratio_hours = 9  ### condition: 'alan_ratio_hours': {'type': 'int', '<=': None, '>=': 1, 'science_constant': False, 'direct_from_question': True}\n# Let x be the number of hours David worked\n# Alan's hours worked will be 3x\n# Total bricks laid is the sum of bricks laid by both \n# Calculate the total hours worked by David and Alan\n# Since Alan worked three times as many hours, if David worked x hours, total hours = x + 3x = 4x\n# Therefore, total bricks = bricks_per_hour * total_hours = total_bricks\n# This leads to the equation: bricks_per_hour * (x + 3x) = total_bricks\n# Further simplifying gives: 30 * 4x = 600 \n# We can solve for x, the number of hours David worked\n# Calculate David's hours worked\ndavid_hours_worked = total_bricks / (bricks_per_hour * (alan_ratio_hours + 1))  ### condition: 'david_hours_worked': {'type': 'float', '<=': None, '>=': 0, 'science_constant': False, 'direct_from_question': False}\n# Calculate the total number of bricks laid by David\ndavid_bricks_laid = bricks_per_hour * david_hours_worked  ### condition: 'david_bricks_laid': {'type': 'float', '<=': None, '>=': 0, 'science_constant': False, 'direct_from_question': False}\n# Print the number of bricks David laid\nprint(f\"David laid: {david_bricks_laid} bricks\")"
